package com.zjl.javase.notion;

public class javaBasicsGgrammar02 {
	/**
	 * 
		5.语句：

			If  switch  do while   while  for

		这些语句什么时候用？

			1）、当判断固定个数的值的时候，可以使用if，也可以使用switch。

			但是建议使用switch，效率相对较高。

			switch(变量){

 				case 值:要执行的语句;break;

 					…

 				default:要执行的语句;

			}

 			工作原理：用小括号中的变量的值依次和case后面的值进行对比，和哪个case后面的值相同了

           	就执行哪个case后面的语句，如果没有相同的则执行default后面的语句；

 			细节：
 				1）：break是可以省略的，如果省略了就一直执行到遇到break为止；

   				2）：switch 后面的小括号中的变量应该是byte,char,short,int四种类型中的一种；

   				3）：default可以写在switch结构中的任意位置；如果将default语句放在了第一行，则不管expression与case中的value是否匹配，程序会从default开始执行直到第一个break出现。

			2）、当判断数据范围，获取判断运算结果boolean类型时，需要使用if。

			3）、当某些语句需要执行很多次时，就用循环结构。

			while和for可以进行互换。

				区别在于：如果需要定义变量控制循环次数。建议使用for。因为for循环完毕，变量在内存中释放。

 

			break:作用于switch ，和循环语句，用于跳出，或者称为结束。

			break语句单独存在时，下面不要定义其他语句，因为执行不到，编译会失败。当循环嵌套时，break只跳出当前所在循环。要跳出嵌套中的外部循环，只要给循环起名字即可，这个名字称之为标号。

			continue:只作用于循环结构，继续循环用的。

			作用：结束本次循环，继续下次循环。该语句单独存在时，下面不可以定义语句，执行不到。
			
			6，函 数：为了提高代码的复用性，可以将其定义成一个单独的功能，该功能的体现就是java中的函数。函数就是体现之一。

			java中的函数的定义格式：

				修饰符 返回值类型 函数名(参数类型 形式参数1，参数类型 形式参数1，…){

					执行语句；

					return 返回值；

				}

			当函数没有具体的返回值时，返回的返回值类型用void关键字表示。

			如果函数的返回值类型是void时，return语句可以省略不写的，系统会帮你自动加上。

			return的作用：结束函数。结束功能。

			如何定义一个函数？

				函数其实就是一个功能，定义函数就是实现功能，通过两个明确来完成：

				1）、明确该功能的运算完的结果，其实是在明确这个函数的返回值类型。

				2）、在实现该功能的过程中是否有未知内容参与了运算，其实就是在明确这个函数的参数列表(参数类型&参数个数)。

			函数的作用：

				1）、用于定义功能。

				2）、用于封装代码提高代码的复用性。

			注意：函数中只能调用函数，不能定义函数。

			主函数：

				1）、保证该类的独立运行。

				2）、因为它是程序的入口。

				3）、因为它在被jvm调用。


			函数定义名称是为什么呢？

				答：1）、为了对该功能进行标示，方便于调用。

				2）、为了通过名称就可以明确函数的功能，为了增加代码的阅读性。

			重载的定义是：在一个类中，如果出现了两个或者两个以上的同名函数，只要它们的参数的个数，或者参数的类型不同，即可称之为该函数重载了。

			如何区分重载：当函数同名时，只看参数列表。和返回值类型没关系。
			
			7，数 组：
			用于存储同一类型数据的一个容器。好处：可以对该容器中的数据进行编号，从0开始。数组用于封装数据，就是一个具体的实体。

			如何在java中表现一个数组呢？两种表现形式。

			1）、元素类型[] 变量名 = new 元素类型[元素的个数]；

			2）、元素类型[] 变量名 = {元素1，元素2...}；

			元素类型[] 变量名 = new 元素类型[]{元素1，元素2...}；

			---------------------------------------------------------

			//二分查找法。必须有前提：数组中的元素要有序。

			public static int halfSeach_2(int[] arr,int key){

				int min,max,mid;//定义最小，最大，中间数

				min = 0;//最小为0

				max = arr.length-1;// 最大为数组的长度-1

				mid = (max+min)>>1; //(max+min)/2;//中间数为最大加最小除以2

				while(arr[mid]!=key){//如果数组中間值不等于key

					if(key>arr[mid]){//如果key>中間值

						min = mid + 1;

					}else if(key<arr[mid])

						max = mid - 1;

					if(max<min)

						return -1;

					mid = (max+min)>>1;

				}

			return mid;

		}
		
		java分了5片内存。

			1：寄存器。2：本地方法区。3：方法区。4：栈。5：堆。

		栈：存储的都是局部变量 ( 函数中定义的变量，函数上的参数，语句中的变量 )；只要数据运算完成所在的区域结束，该数据就会被释放。

		堆：用于存储数组和对象，也就是实体。啥是实体啊？就是用于封装多个数据的。

		1：每一个实体都有内存首地址值。

		2：堆内存中的变量都有默认初始化值。因为数据类型不同，值也不一样。

		3：垃圾回收机制。

		----------------------------------------------------------------------------------------------
	 */
}
